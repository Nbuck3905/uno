{"ast":null,"code":"import _objectSpread from \"/Users/flatironstudent/Desktop/Joseph/Module4/uno/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/flatironstudent/Desktop/Joseph/Module4/uno/front-end/src/Components/GameScreen.js\";\nimport React, { Component } from \"react\";\nimport cards from \"../cards\";\nimport GamePlay from \"./GamePlay\";\nimport ColorSelect from './ColorSelect';\nimport { io } from \"../Socket\";\nexport default class GameScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allCards: [],\n      game: null,\n      players: [],\n      creator: {},\n      player: {\n        user: {},\n        cards: []\n      },\n      deal: false,\n      drawCards: [],\n      turn: null,\n      discard: null,\n      drawAmount: 0,\n      colorSelect: false,\n      selectedColor: ''\n    };\n\n    this.deal = () => {\n      if (this.state.player.user.id == this.state.turn.id) {\n        let x = 0;\n        let drawCards = this.state.drawCards;\n\n        while (x < 7) {\n          let randomNumber = Math.floor(Math.random() * drawCards.length);\n          let drawnCard = drawCards[randomNumber];\n          this.state.player.cards.push(drawnCard);\n          drawCards = drawCards.filter(card => card != drawnCard);\n          x = x + 1;\n        }\n\n        this.setState({\n          drawCards\n        });\n        io.emit('cards.dealt', drawCards);\n        io.emit('next.deal', this.state.turn);\n      }\n    };\n\n    this.getCreator = id => {\n      io.emit(\"creator.get\", id);\n      io.on(\"creator.send\", creator => {\n        this.setState({\n          players: [...this.props.players, creator],\n          creator: creator,\n          turn: this.state.players[0]\n        });\n      });\n    };\n\n    this.handleDeal = () => {\n      io.emit(\"deal\");\n    };\n\n    this.handleDraw = () => {\n      if (this.state.player.user.id === this.state.turn.id) {\n        if (this.state.drawAmount == 0) {\n          let drawCards = this.state.drawCards;\n          let randomNumber = Math.floor(Math.random() * drawCards.length);\n          let drawnCard = drawCards[randomNumber];\n          drawCards = drawCards.filter(card => card.id != drawnCard.id);\n          this.setState({\n            player: _objectSpread({}, this.state.player, {\n              cards: [...this.state.player.cards, drawnCard]\n            })\n          });\n          return io.emit('draw', drawCards);\n        }\n\n        let drawAmount = this.state.drawAmount;\n        let drawCards = this.state.drawCards;\n        let drawnCards = [];\n\n        while (drawAmount > 0) {\n          let randomNumber = Math.floor(Math.random() * drawCards.length);\n          let drawnCard = drawCards[randomNumber];\n          drawCards = drawCards.filter(card => card.id != drawnCard.id);\n          drawnCards.push(drawnCard);\n          drawAmount = drawAmount - 1;\n        }\n\n        this.setState({\n          player: _objectSpread({}, this.state.player, {\n            cards: [...this.state.player.cards, ...drawnCards]\n          })\n        });\n        io.emit('draw', drawCards);\n      }\n    };\n\n    this.handlePlay = playedCard => {\n      console.log(playedCard);\n      let drawAmount = this.state.drawAmount;\n\n      if (this.state.player.user.id === this.state.turn.id) {\n        if (!this.state.discard) {\n          if (playedCard.type == 'wild') {\n            this.setState({\n              colorSelect: true\n            }, () => {\n              playedCard.color = selectedColor;\n              return io.emit('wild.play', playedCard);\n            });\n          }\n\n          if (playedCard.type == '+4') {\n            this.setState({\n              colorSelect: true\n            }, () => {\n              //playedCard.color = selectedColor\n              return io.emit('draw4.play', playedCard);\n            });\n          }\n\n          if (playedCard.type == '+2') {\n            return io.emit('draw2.play', playedCard);\n          }\n\n          if (playedCard.type == 'skip') {\n            return io.emit('skip.play', playedCard);\n          }\n\n          if (playedCard.type == 'reverse') {\n            return io.emit('reverse.play', playedCard);\n          }\n\n          return io.emit('normal.play', playedCard);\n        }\n\n        if (drawAmount == 0) {\n          if (playedCard.type == 'wild') {\n            this.setState({\n              colorSelect: true\n            }, () => {\n              //playedCard.color = selectedColor\n              return io.emit('wild.play', playedCard);\n            });\n          }\n\n          if (playedCard.type == '+4') {\n            this.setState({\n              colorSelect: true\n            }, () => {\n              //playedCard.color = selectedColor\n              return io.emit('draw4.play', playedCard);\n            });\n          }\n\n          if (playedCard.type == this.state.discard.type || playedCard.color == this.state.discard.color) {\n            if (playedCard.type == '+2') {\n              return io.emit('draw2.play', playedCard);\n            }\n\n            if (playedCard.type == 'skip') {\n              return io.emit('skip.play', playedCard);\n            }\n\n            if (playedCard.type == 'reverse') {\n              return io.emit('reverse.play', playedCard);\n            }\n\n            return io.emit('normal.play', playedCard);\n          }\n        }\n\n        if (playedCard.type == this.state.discard.type) {\n          if (playedCard.type == '+4') {\n            this.setState({\n              colorSelect: true\n            }, () => {\n              //playedCard.color = selectedColor\n              return io.emit('draw4.play', playedCard);\n            });\n          }\n\n          if (playedCard.type == '+2') {\n            return io.emit('draw2.play', playedCard);\n          }\n        }\n      }\n    };\n\n    this.winner = player => {\n      // What happens when you win?\n      console.log(`${player.username} wins`);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      allCards: cards,\n      game: this.props.game,\n      players: this.props.players,\n      player: {\n        user: this.props.user,\n        cards: []\n      },\n      drawCards: cards\n    });\n    this.getCreator(this.props.game.creator_id);\n    io.on('drawCards.new', cards => this.setState({\n      drawCards: cards\n    }));\n    io.on(\"dealt\", () => {\n      this.setState({\n        deal: true\n      });\n      this.deal();\n    });\n    io.on('next.dealt', ({\n      id\n    }) => {\n      let player = this.state.players.find(player => player.id === id);\n\n      if (this.state.players.indexOf(player) + 2 <= this.state.players.length) {\n        return this.setState({\n          turn: this.state.players[this.state.players.indexOf(player) + 1]\n        }, () => this.deal());\n      }\n\n      return this.setState({\n        turn: this.state.players[0]\n      });\n    });\n    io.on('drew', cards => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        drawCards: cards,\n        drawAmount: 0,\n        turn: this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1]\n      });\n    });\n    io.on('normal.played', playedCard => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          cards: this.state.player.cards.filter(card => card.id != playedCard.id)\n        }),\n        discard: playedCard,\n        turn: this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1]\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null);\n    });\n    io.on('skip.played', playedCard => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          cards: this.state.player.cards.filter(card => card.id != playedCard.id)\n        }),\n        discard: playedCard,\n        turn: this.state.players.indexOf(player) + 1 == this.state.players.length ? this.state.players[1] : this.state.players.indexOf(player) + 2 == this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 2]\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null);\n    });\n    io.on('reverse.played', playedCard => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          cards: this.state.player.cards.filter(card => card.id != playedCard.id)\n        }),\n        discard: playedCard,\n        turn: this.state.players.indexOf(player) == 0 ? this.state.players[this.state.players.length - 1] : this.state.players[this.state.players.indexOf(player) - 1],\n        players: this.state.players.reverse()\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null);\n    });\n    io.on('draw2.played', playedCard => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          cards: this.state.player.cards.filter(card => card.id != playedCard.id)\n        }),\n        discard: playedCard,\n        turn: this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1],\n        drawAmount: this.state.drawAmount + 2\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null);\n    });\n    io.on('draw4.played', playedCard => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          cards: this.state.player.cards.filter(card => card.id != playedCard.id)\n        }),\n        discard: playedCard,\n        turn: this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1],\n        drawAmount: this.state.drawAmount + 4,\n        colorSelect: false\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null);\n    });\n    io.on('wild.played', playedCard => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          cards: this.state.player.cards.filter(card => card.id != playedCard.id)\n        }),\n        discard: playedCard,\n        turn: this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1],\n        colorSelect: false\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null);\n    });\n  }\n\n  render() {\n    if (this.state.deal) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, this.state.colorSelect ? React.createElement(ColorSelect, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }) : React.createElement(GamePlay, {\n        drawCards: this.state.drawCards,\n        cards: this.state.player.cards,\n        turn: this.state.turn.username,\n        handlePlay: this.handlePlay,\n        discard: this.state.discard,\n        handleDraw: this.handleDraw,\n        colorSelect: this.state.colorSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"ui raised very padded text container segment form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, this.state.game ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, this.state.game.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.state.player.user.username), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Creator: \", this.state.creator.username)) : null, this.state.players.map(player => {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, player.username);\n    }), this.props.user.id == this.state.creator.id ? React.createElement(\"div\", {\n      className: \"ui massive green button\",\n      onClick: this.handleDeal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Deal\") : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/Joseph/Module4/uno/front-end/src/Components/GameScreen.js"],"names":["React","Component","cards","GamePlay","ColorSelect","io","GameScreen","state","allCards","game","players","creator","player","user","deal","drawCards","turn","discard","drawAmount","colorSelect","selectedColor","id","x","randomNumber","Math","floor","random","length","drawnCard","push","filter","card","setState","emit","getCreator","on","props","handleDeal","handleDraw","drawnCards","handlePlay","playedCard","console","log","type","color","winner","username","componentDidMount","creator_id","find","indexOf","reverse","render","name","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,EAAT,QAAmB,WAAnB;AAEA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDM,KADgD,GACxC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,IAFA;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENX,QAAAA,KAAK,EAAE;AAFD,OALF;AASNY,MAAAA,IAAI,EAAE,KATA;AAUNC,MAAAA,SAAS,EAAE,EAVL;AAWNC,MAAAA,IAAI,EAAE,IAXA;AAYNC,MAAAA,OAAO,EAAE,IAZH;AAaNC,MAAAA,UAAU,EAAE,CAbN;AAcNC,MAAAA,WAAW,EAAE,KAdP;AAeNC,MAAAA,aAAa,EAAE;AAfT,KADwC;;AAAA,SA4GhDN,IA5GgD,GA4GzC,MAAM;AACX,UAAG,KAAKP,KAAL,CAAWK,MAAX,CAAkBC,IAAlB,CAAuBQ,EAAvB,IAA6B,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhD,EAAmD;AACjD,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIP,SAAS,GAAG,KAAKR,KAAL,CAAWQ,SAA3B;;AACA,eAAOO,CAAC,GAAG,CAAX,EAAc;AACZ,cAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,SAAS,CAACY,MAArC,CAAnB;AACA,cAAIC,SAAS,GAAGb,SAAS,CAACQ,YAAD,CAAzB;AAEA,eAAKhB,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB2B,IAAxB,CAA6BD,SAA7B;AACAb,UAAAA,SAAS,GAAGA,SAAS,CAACe,MAAV,CAAiBC,IAAI,IAAIA,IAAI,IAAIH,SAAjC,CAAZ;AACAN,UAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AACD,aAAKU,QAAL,CAAc;AAAEjB,UAAAA;AAAF,SAAd;AACAV,QAAAA,EAAE,CAAC4B,IAAH,CAAQ,aAAR,EAAuBlB,SAAvB;AACAV,QAAAA,EAAE,CAAC4B,IAAH,CAAQ,WAAR,EAAqB,KAAK1B,KAAL,CAAWS,IAAhC;AACD;AACF,KA5H+C;;AAAA,SA8HhDkB,UA9HgD,GA8HnCb,EAAE,IAAI;AACjBhB,MAAAA,EAAE,CAAC4B,IAAH,CAAQ,aAAR,EAAuBZ,EAAvB;AACAhB,MAAAA,EAAE,CAAC8B,EAAH,CAAM,cAAN,EAAsBxB,OAAO,IAAI;AAC/B,aAAKqB,QAAL,CAAc;AACZtB,UAAAA,OAAO,EAAE,CAAC,GAAG,KAAK0B,KAAL,CAAW1B,OAAf,EAAwBC,OAAxB,CADG;AAEZA,UAAAA,OAAO,EAAEA,OAFG;AAGZK,UAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,OAAX,CAAmB,CAAnB;AAHM,SAAd;AAKD,OAND;AAOD,KAvI+C;;AAAA,SAyIhD2B,UAzIgD,GAyInC,MAAM;AACjBhC,MAAAA,EAAE,CAAC4B,IAAH,CAAQ,MAAR;AACD,KA3I+C;;AAAA,SA6IhDK,UA7IgD,GA6InC,MAAM;AACjB,UAAG,KAAK/B,KAAL,CAAWK,MAAX,CAAkBC,IAAlB,CAAuBQ,EAAvB,KAA8B,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAjD,EAAoD;AAClD,YAAG,KAAKd,KAAL,CAAWW,UAAX,IAAyB,CAA5B,EAA8B;AAC5B,cAAIH,SAAS,GAAG,KAAKR,KAAL,CAAWQ,SAA3B;AAEA,cAAIQ,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,SAAS,CAACY,MAArC,CAAnB;AACA,cAAIC,SAAS,GAAGb,SAAS,CAACQ,YAAD,CAAzB;AACAR,UAAAA,SAAS,GAAGA,SAAS,CAACe,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWO,SAAS,CAACP,EAA9C,CAAZ;AAEA,eAAKW,QAAL,CAAc;AAACpB,YAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,cAAAA,KAAK,EAAE,CAAC,GAAG,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAtB,EAA6B0B,SAA7B;AAAhC;AAAP,WAAd;AACA,iBAAOvB,EAAE,CAAC4B,IAAH,CAAQ,MAAR,EAAgBlB,SAAhB,CAAP;AACD;;AAED,YAAIG,UAAU,GAAG,KAAKX,KAAL,CAAWW,UAA5B;AACA,YAAIH,SAAS,GAAG,KAAKR,KAAL,CAAWQ,SAA3B;AACA,YAAIwB,UAAU,GAAG,EAAjB;;AAEA,eAAMrB,UAAU,GAAG,CAAnB,EAAqB;AACnB,cAAIK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,SAAS,CAACY,MAArC,CAAnB;AACA,cAAIC,SAAS,GAAGb,SAAS,CAACQ,YAAD,CAAzB;AACAR,UAAAA,SAAS,GAAGA,SAAS,CAACe,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWO,SAAS,CAACP,EAA9C,CAAZ;AACAkB,UAAAA,UAAU,CAACV,IAAX,CAAgBD,SAAhB;AAEAV,UAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AACD;;AACD,aAAKc,QAAL,CAAc;AAACpB,UAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,YAAAA,KAAK,EAAE,CAAC,GAAG,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAtB,EAA6B,GAAGqC,UAAhC;AAAhC;AAAP,SAAd;AACAlC,QAAAA,EAAE,CAAC4B,IAAH,CAAQ,MAAR,EAAgBlB,SAAhB;AACD;AACF,KAzK+C;;AAAA,SA2KhDyB,UA3KgD,GA2KlCC,UAAD,IAAgB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,UAAIvB,UAAU,GAAG,KAAKX,KAAL,CAAWW,UAA5B;;AACA,UAAG,KAAKX,KAAL,CAAWK,MAAX,CAAkBC,IAAlB,CAAuBQ,EAAvB,KAA8B,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAjD,EAAoD;AAClD,YAAG,CAAC,KAAKd,KAAL,CAAWU,OAAf,EAAuB;AACrB,cAAGwB,UAAU,CAACG,IAAX,IAAmB,MAAtB,EAA6B;AAC3B,iBAAKZ,QAAL,CAAc;AACZb,cAAAA,WAAW,EAAE;AADD,aAAd,EAEG,MAAM;AACPsB,cAAAA,UAAU,CAACI,KAAX,GAAmBzB,aAAnB;AACA,qBAAOf,EAAE,CAAC4B,IAAH,CAAQ,WAAR,EAAqBQ,UAArB,CAAP;AACD,aALD;AAMD;;AACD,cAAGA,UAAU,CAACG,IAAX,IAAmB,IAAtB,EAA2B;AACzB,iBAAKZ,QAAL,CAAc;AACZb,cAAAA,WAAW,EAAE;AADD,aAAd,EAEG,MAAM;AACP;AACA,qBAAOd,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBQ,UAAtB,CAAP;AACD,aALD;AAMD;;AACD,cAAGA,UAAU,CAACG,IAAX,IAAmB,IAAtB,EAA2B;AACzB,mBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBQ,UAAtB,CAAP;AACD;;AACD,cAAGA,UAAU,CAACG,IAAX,IAAmB,MAAtB,EAA6B;AAC3B,mBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,WAAR,EAAqBQ,UAArB,CAAP;AACD;;AACD,cAAGA,UAAU,CAACG,IAAX,IAAmB,SAAtB,EAAgC;AAC9B,mBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,cAAR,EAAwBQ,UAAxB,CAAP;AACD;;AACD,iBAAOpC,EAAE,CAAC4B,IAAH,CAAQ,aAAR,EAAuBQ,UAAvB,CAAP;AACD;;AACD,YAAGvB,UAAU,IAAI,CAAjB,EAAmB;AACjB,cAAGuB,UAAU,CAACG,IAAX,IAAmB,MAAtB,EAA6B;AAC3B,iBAAKZ,QAAL,CAAc;AACZb,cAAAA,WAAW,EAAE;AADD,aAAd,EAEG,MAAM;AACP;AACA,qBAAOd,EAAE,CAAC4B,IAAH,CAAQ,WAAR,EAAqBQ,UAArB,CAAP;AACD,aALD;AAMD;;AACD,cAAGA,UAAU,CAACG,IAAX,IAAmB,IAAtB,EAA2B;AACzB,iBAAKZ,QAAL,CAAc;AACZb,cAAAA,WAAW,EAAE;AADD,aAAd,EAEG,MAAM;AACP;AACA,qBAAOd,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBQ,UAAtB,CAAP;AACD,aALD;AAMD;;AACD,cAAIA,UAAU,CAACG,IAAX,IAAmB,KAAKrC,KAAL,CAAWU,OAAX,CAAmB2B,IAAvC,IAAiDH,UAAU,CAACI,KAAX,IAAoB,KAAKtC,KAAL,CAAWU,OAAX,CAAmB4B,KAA3F,EAAkG;AAChG,gBAAGJ,UAAU,CAACG,IAAX,IAAmB,IAAtB,EAA2B;AACzB,qBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBQ,UAAtB,CAAP;AACD;;AACD,gBAAGA,UAAU,CAACG,IAAX,IAAmB,MAAtB,EAA6B;AAC3B,qBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,WAAR,EAAqBQ,UAArB,CAAP;AACD;;AACD,gBAAGA,UAAU,CAACG,IAAX,IAAmB,SAAtB,EAAgC;AAC9B,qBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,cAAR,EAAwBQ,UAAxB,CAAP;AACD;;AACD,mBAAOpC,EAAE,CAAC4B,IAAH,CAAQ,aAAR,EAAuBQ,UAAvB,CAAP;AACD;AACF;;AACD,YAAGA,UAAU,CAACG,IAAX,IAAmB,KAAKrC,KAAL,CAAWU,OAAX,CAAmB2B,IAAzC,EAA8C;AAC5C,cAAGH,UAAU,CAACG,IAAX,IAAmB,IAAtB,EAA2B;AACzB,iBAAKZ,QAAL,CAAc;AACZb,cAAAA,WAAW,EAAE;AADD,aAAd,EAEG,MAAM;AACP;AACA,qBAAOd,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBQ,UAAtB,CAAP;AACD,aALD;AAMD;;AACD,cAAGA,UAAU,CAACG,IAAX,IAAmB,IAAtB,EAA2B;AACzB,mBAAOvC,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBQ,UAAtB,CAAP;AACD;AACF;AACF;AACF,KAvP+C;;AAAA,SAyPhDK,MAzPgD,GAyPtClC,MAAD,IAAY;AACnB;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAE/B,MAAM,CAACmC,QAAS,OAA/B;AACD,KA5P+C;AAAA;;AAmBhDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,QAAL,CAAc;AACZxB,MAAAA,QAAQ,EAAEN,KADE;AAEZO,MAAAA,IAAI,EAAE,KAAK2B,KAAL,CAAW3B,IAFL;AAGZC,MAAAA,OAAO,EAAE,KAAK0B,KAAL,CAAW1B,OAHR;AAIZE,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,KAAKuB,KAAL,CAAWvB,IADX;AAENX,QAAAA,KAAK,EAAE;AAFD,OAJI;AAQZa,MAAAA,SAAS,EAAEb;AARC,KAAd;AAUA,SAAKgC,UAAL,CAAgB,KAAKE,KAAL,CAAW3B,IAAX,CAAgBwC,UAAhC;AACA5C,IAAAA,EAAE,CAAC8B,EAAH,CAAM,eAAN,EAAwBjC,KAAD,IAAW,KAAK8B,QAAL,CAAc;AAACjB,MAAAA,SAAS,EAAEb;AAAZ,KAAd,CAAlC;AACAG,IAAAA,EAAE,CAAC8B,EAAH,CAAM,OAAN,EAAe,MAAM;AACnB,WAAKH,QAAL,CAAc;AAAElB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKA,IAAL;AACD,KAHD;AAIAT,IAAAA,EAAE,CAAC8B,EAAH,CAAM,YAAN,EAAoB,CAAC;AAAEd,MAAAA;AAAF,KAAD,KAAY;AAC9B,UAAIT,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAcA,EAAhD,CAAb;;AACA,UAAI,KAAKd,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAAjE,EAAwE;AACtE,eAAO,KAAKK,QAAL,CAAc;AACnBhB,UAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD;AADa,SAAd,EAEJ,MAAM,KAAKE,IAAL,EAFF,CAAP;AAGD;;AACD,aAAO,KAAKkB,QAAL,CAAc;AAAChB,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,OAAX,CAAmB,CAAnB;AAAP,OAAd,CAAP;AACD,KARD;AASAL,IAAAA,EAAE,CAAC8B,EAAH,CAAM,MAAN,EAAejC,KAAD,IAAW;AACvB,UAAIU,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZjB,QAAAA,SAAS,EAAEb,KADC;AAEZgB,QAAAA,UAAU,EAAE,CAFA;AAGZF,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA8F,KAAKH,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD;AAHzF,OAAd;AAKD,KAPD;AAQAP,IAAAA,EAAE,CAAC8B,EAAH,CAAM,eAAN,EAAwBM,UAAD,IAAgB;AACrC,UAAI7B,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB4B,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWoB,UAAU,CAACpB,EAA7D;AAAhC,UADM;AAEZJ,QAAAA,OAAO,EAAEwB,UAFG;AAGZzB,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA8F,KAAKH,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD;AAHzF,OAAd,EAIG,MAAM,KAAKL,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwByB,MAAxB,IAAkC,CAAlC,GAAsC,KAAKmB,MAAL,CAAY,KAAKvC,KAAL,CAAWK,MAAX,CAAkBC,IAA9B,CAAtC,GAA4E,IAJrF;AAKD,KAPD;AAQAR,IAAAA,EAAE,CAAC8B,EAAH,CAAM,aAAN,EAAsBM,UAAD,IAAgB;AACnC,UAAI7B,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB4B,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWoB,UAAU,CAACpB,EAA7D;AAAhC,UADM;AAEZJ,QAAAA,OAAO,EAAEwB,UAFG;AAGZzB,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA+F,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA8F,KAAKH,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD;AAHxL,OAAd,EAIG,MAAM,KAAKL,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwByB,MAAxB,IAAkC,CAAlC,GAAsC,KAAKmB,MAAL,CAAY,KAAKvC,KAAL,CAAWK,MAAX,CAAkBC,IAA9B,CAAtC,GAA4E,IAJrF;AAKD,KAPD;AAQAR,IAAAA,EAAE,CAAC8B,EAAH,CAAM,gBAAN,EAAyBM,UAAD,IAAgB;AACtC,UAAI7B,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB4B,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWoB,UAAU,CAACpB,EAA7D;AAAhC,UADM;AAEZJ,QAAAA,OAAO,EAAEwB,UAFG;AAGZzB,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,KAAsC,CAAtC,GAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmBiB,MAAnB,GAA2B,CAA9C,CAA1C,GAA6F,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD,CAHxF;AAIZF,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAAX,CAAmB0C,OAAnB;AAJG,OAAd,EAKG,MAAM,KAAK7C,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwByB,MAAxB,IAAkC,CAAlC,GAAsC,KAAKmB,MAAL,CAAY,KAAKvC,KAAL,CAAWK,MAAX,CAAkBC,IAA9B,CAAtC,GAA4E,IALrF;AAMD,KARD;AASAR,IAAAA,EAAE,CAAC8B,EAAH,CAAM,cAAN,EAAuBM,UAAD,IAAgB;AACpC,UAAI7B,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB4B,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWoB,UAAU,CAACpB,EAA7D;AAAhC,UADM;AAEZJ,QAAAA,OAAO,EAAEwB,UAFG;AAGZzB,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA8F,KAAKH,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD,CAHzF;AAIZM,QAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWW,UAAX,GAAwB;AAJxB,OAAd,EAKG,MAAM,KAAKX,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwByB,MAAxB,IAAkC,CAAlC,GAAsC,KAAKmB,MAAL,CAAY,KAAKvC,KAAL,CAAWK,MAAX,CAAkBC,IAA9B,CAAtC,GAA4E,IALrF;AAMD,KARD;AASAR,IAAAA,EAAE,CAAC8B,EAAH,CAAM,cAAN,EAAuBM,UAAD,IAAgB;AACpC,UAAI7B,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB4B,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWoB,UAAU,CAACpB,EAA7D;AAAhC,UADM;AAEZJ,QAAAA,OAAO,EAAEwB,UAFG;AAGZzB,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA8F,KAAKH,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD,CAHzF;AAIZM,QAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWW,UAAX,GAAwB,CAJxB;AAKZC,QAAAA,WAAW,EAAE;AALD,OAAd,EAMG,MAAM,KAAKZ,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwByB,MAAxB,IAAkC,CAAlC,GAAsC,KAAKmB,MAAL,CAAY,KAAKvC,KAAL,CAAWK,MAAX,CAAkBC,IAA9B,CAAtC,GAA4E,IANrF;AAOD,KATD;AAUAR,IAAAA,EAAE,CAAC8B,EAAH,CAAM,aAAN,EAAsBM,UAAD,IAAgB;AACnC,UAAI7B,MAAM,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBwC,IAAnB,CAAwBtC,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAc,KAAKd,KAAL,CAAWS,IAAX,CAAgBK,EAAhE,CAAb;AACA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,MAAM,oBAAM,KAAKL,KAAL,CAAWK,MAAjB;AAAyBV,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwB4B,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACV,EAAL,IAAWoB,UAAU,CAACpB,EAA7D;AAAhC,UADM;AAEZJ,QAAAA,OAAO,EAAEwB,UAFG;AAGZzB,QAAAA,IAAI,EAAG,KAAKT,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAArC,IAA0C,KAAKL,KAAL,CAAWG,OAAX,CAAmBiB,MAA7D,GAAsE,KAAKpB,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAAtE,GAA8F,KAAKH,KAAL,CAAWG,OAAX,CAAmB,KAAKH,KAAL,CAAWG,OAAX,CAAmByC,OAAnB,CAA2BvC,MAA3B,IAAqC,CAAxD,CAHzF;AAIZO,QAAAA,WAAW,EAAE;AAJD,OAAd,EAKG,MAAM,KAAKZ,KAAL,CAAWK,MAAX,CAAkBV,KAAlB,CAAwByB,MAAxB,IAAkC,CAAlC,GAAsC,KAAKmB,MAAL,CAAY,KAAKvC,KAAL,CAAWK,MAAX,CAAkBC,IAA9B,CAAtC,GAA4E,IALrF;AAMD,KARD;AASD;;AAoJDwC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK9C,KAAL,CAAWO,IAAf,EAAqB;AACnB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWY,WAAX,GAAyB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GACC,oBAAC,QAAD;AACE,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWQ,SADxB;AAEE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWK,MAAX,CAAkBV,KAF3B;AAGE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWS,IAAX,CAAgB+B,QAHxB;AAIE,QAAA,UAAU,EAAE,KAAKP,UAJnB;AAKE,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWU,OALtB;AAME,QAAA,UAAU,EAAE,KAAKqB,UANnB;AAOE,QAAA,WAAW,EAAE,KAAK/B,KAAL,CAAWY,WAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF;AAcD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWE,IAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWE,IAAX,CAAgB6C,IAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK/C,KAAL,CAAWK,MAAX,CAAkBC,IAAlB,CAAuBkC,QAA5B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,KAAKxC,KAAL,CAAWI,OAAX,CAAmBoC,QAAjC,CAHF,CADD,GAMG,IAPN,EAQG,KAAKxC,KAAL,CAAWG,OAAX,CAAmB6C,GAAnB,CAAuB3C,MAAM,IAAI;AAChC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,MAAM,CAACmC,QAAZ,CAAP;AACD,KAFA,CARH,EAWG,KAAKX,KAAL,CAAWvB,IAAX,CAAgBQ,EAAhB,IAAsB,KAAKd,KAAL,CAAWI,OAAX,CAAmBU,EAAzC,GACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAyC,MAAA,OAAO,EAAE,KAAKgB,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAfN,CADF;AAmBD;;AAlS+C","sourcesContent":["import React, { Component } from \"react\";\nimport cards from \"../cards\";\nimport GamePlay from \"./GamePlay\";\nimport ColorSelect from './ColorSelect'\nimport { io } from \"../Socket\";\n\nexport default class GameScreen extends Component {\n  state = {\n    allCards: [],\n    game: null,\n    players: [],\n    creator: {},\n    player: {\n      user: {},\n      cards: []\n    },\n    deal: false,\n    drawCards: [],\n    turn: null,\n    discard: null,\n    drawAmount: 0,\n    colorSelect: false,\n    selectedColor: ''\n  };\n\n  componentDidMount() {\n    this.setState({\n      allCards: cards,\n      game: this.props.game,\n      players: this.props.players,\n      player: {\n        user: this.props.user,\n        cards: []\n      },\n      drawCards: cards,\n    });\n    this.getCreator(this.props.game.creator_id);\n    io.on('drawCards.new', (cards) => this.setState({drawCards: cards}))\n    io.on(\"dealt\", () => {\n      this.setState({ deal: true });\n      this.deal();\n    });\n    io.on('next.dealt', ({ id }) => {\n      let player = this.state.players.find(player => player.id === id)\n      if( this.state.players.indexOf(player) + 2 <= this.state.players.length){\n        return this.setState({\n          turn: this.state.players[this.state.players.indexOf(player) + 1]\n        }, () => this.deal())\n      }\n      return this.setState({turn: this.state.players[0]})\n    })\n    io.on('drew', (cards) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        drawCards: cards,\n        drawAmount: 0,\n        turn: (this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1])\n      })\n    })\n    io.on('normal.played', (playedCard) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        player: {...this.state.player, cards: this.state.player.cards.filter(card => card.id != playedCard.id)},\n        discard: playedCard,\n        turn: (this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1])\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null)\n    })\n    io.on('skip.played', (playedCard) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        player: {...this.state.player, cards: this.state.player.cards.filter(card => card.id != playedCard.id)},\n        discard: playedCard,\n        turn: (this.state.players.indexOf(player) + 1 == this.state.players.length ? this.state.players[1] : (this.state.players.indexOf(player) + 2 == this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 2]))\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null)\n    })\n    io.on('reverse.played', (playedCard) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        player: {...this.state.player, cards: this.state.player.cards.filter(card => card.id != playedCard.id)},\n        discard: playedCard,\n        turn: (this.state.players.indexOf(player) == 0 ? this.state.players[this.state.players.length -1] : this.state.players[this.state.players.indexOf(player) - 1]),\n        players: this.state.players.reverse()\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null)\n    })\n    io.on('draw2.played', (playedCard) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        player: {...this.state.player, cards: this.state.player.cards.filter(card => card.id != playedCard.id)},\n        discard: playedCard,\n        turn: (this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1]),\n        drawAmount: this.state.drawAmount + 2\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null)\n    })\n    io.on('draw4.played', (playedCard) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        player: {...this.state.player, cards: this.state.player.cards.filter(card => card.id != playedCard.id)},\n        discard: playedCard,\n        turn: (this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1]),\n        drawAmount: this.state.drawAmount + 4,\n        colorSelect: false\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null)\n    })\n    io.on('wild.played', (playedCard) => {\n      let player = this.state.players.find(player => player.id === this.state.turn.id)\n      this.setState({\n        player: {...this.state.player, cards: this.state.player.cards.filter(card => card.id != playedCard.id)},\n        discard: playedCard,\n        turn: (this.state.players.indexOf(player) + 1 >= this.state.players.length ? this.state.players[0] : this.state.players[this.state.players.indexOf(player) + 1]),\n        colorSelect: false\n      }, () => this.state.player.cards.length == 0 ? this.winner(this.state.player.user) : null)\n    })\n  }\n\n  deal = () => {\n    if(this.state.player.user.id == this.state.turn.id){\n      let x = 0;\n      let drawCards = this.state.drawCards\n      while (x < 7) {\n        let randomNumber = Math.floor(Math.random() * drawCards.length);\n        let drawnCard = drawCards[randomNumber];\n\n        this.state.player.cards.push(drawnCard);\n        drawCards = drawCards.filter(card => card != drawnCard)\n        x = x + 1;\n      }\n      this.setState({ drawCards })\n      io.emit('cards.dealt', drawCards)\n      io.emit('next.deal', this.state.turn);\n    }\n  };\n\n  getCreator = id => {\n    io.emit(\"creator.get\", id);\n    io.on(\"creator.send\", creator => {\n      this.setState({\n        players: [...this.props.players, creator],\n        creator: creator,\n        turn: this.state.players[0]\n      });\n    });\n  };\n\n  handleDeal = () => {\n    io.emit(\"deal\");\n  };\n\n  handleDraw = () => {\n    if(this.state.player.user.id === this.state.turn.id){\n      if(this.state.drawAmount == 0){\n        let drawCards = this.state.drawCards\n        \n        let randomNumber = Math.floor(Math.random() * drawCards.length);\n        let drawnCard = drawCards[randomNumber];\n        drawCards = drawCards.filter(card => card.id != drawnCard.id)\n        \n        this.setState({player: {...this.state.player, cards: [...this.state.player.cards, drawnCard]}})\n        return io.emit('draw', drawCards)\n      }\n      \n      let drawAmount = this.state.drawAmount\n      let drawCards = this.state.drawCards\n      let drawnCards = []\n\n      while(drawAmount > 0){\n        let randomNumber = Math.floor(Math.random() * drawCards.length);\n        let drawnCard = drawCards[randomNumber];\n        drawCards = drawCards.filter(card => card.id != drawnCard.id)\n        drawnCards.push(drawnCard)\n\n        drawAmount = drawAmount - 1\n      }\n      this.setState({player: {...this.state.player, cards: [...this.state.player.cards, ...drawnCards]}})\n      io.emit('draw', drawCards)\n    }\n  }\n\n  handlePlay = (playedCard) => {\n    console.log(playedCard)\n    let drawAmount = this.state.drawAmount\n    if(this.state.player.user.id === this.state.turn.id){\n      if(!this.state.discard){\n        if(playedCard.type == 'wild'){\n          this.setState({\n            colorSelect: true\n          }, () => {\n            playedCard.color = selectedColor\n            return io.emit('wild.play', playedCard)\n          })\n        }\n        if(playedCard.type == '+4'){\n          this.setState({\n            colorSelect: true\n          }, () => {\n            //playedCard.color = selectedColor\n            return io.emit('draw4.play', playedCard)\n          })\n        }\n        if(playedCard.type == '+2'){\n          return io.emit('draw2.play', playedCard)\n        }\n        if(playedCard.type == 'skip'){\n          return io.emit('skip.play', playedCard)\n        }\n        if(playedCard.type == 'reverse'){\n          return io.emit('reverse.play', playedCard)\n        }\n        return io.emit('normal.play', playedCard)\n      }\n      if(drawAmount == 0){\n        if(playedCard.type == 'wild'){\n          this.setState({\n            colorSelect: true\n          }, () => {\n            //playedCard.color = selectedColor\n            return io.emit('wild.play', playedCard)\n          })\n        }\n        if(playedCard.type == '+4'){\n          this.setState({\n            colorSelect: true\n          }, () => {\n            //playedCard.color = selectedColor\n            return io.emit('draw4.play', playedCard)\n          })\n        }\n        if((playedCard.type == this.state.discard.type) || (playedCard.color == this.state.discard.color)){\n          if(playedCard.type == '+2'){\n            return io.emit('draw2.play', playedCard)\n          }\n          if(playedCard.type == 'skip'){\n            return io.emit('skip.play', playedCard)\n          }\n          if(playedCard.type == 'reverse'){\n            return io.emit('reverse.play', playedCard)\n          }\n          return io.emit('normal.play', playedCard)\n        }\n      }\n      if(playedCard.type == this.state.discard.type){\n        if(playedCard.type == '+4'){\n          this.setState({\n            colorSelect: true\n          }, () => {\n            //playedCard.color = selectedColor\n            return io.emit('draw4.play', playedCard)\n          })\n        }\n        if(playedCard.type == '+2'){\n          return io.emit('draw2.play', playedCard)\n        }\n      }\n    }\n  }\n\n  winner = (player) => {\n    // What happens when you win?\n    console.log(`${player.username} wins`)\n  }\n\n  render() {\n    if (this.state.deal) {\n      return (\n        <div>\n          {this.state.colorSelect ? <ColorSelect /> : \n            <GamePlay\n              drawCards={this.state.drawCards}\n              cards={this.state.player.cards}\n              turn={this.state.turn.username}\n              handlePlay={this.handlePlay}\n              discard={this.state.discard}\n              handleDraw={this.handleDraw}\n              colorSelect={this.state.colorSelect}\n            />}\n        </div>\n      );\n    }\n    return (\n      <div className=\"ui raised very padded text container segment form\">\n        {this.state.game ? (\n          <div>\n            <h1>{this.state.game.name}</h1>\n            <h2>{this.state.player.user.username}</h2>\n            <h3>Creator: {this.state.creator.username}</h3>\n          </div>\n        ) : null}\n        {this.state.players.map(player => {\n          return <h3>{player.username}</h3>;\n        })}\n        {this.props.user.id == this.state.creator.id ? (\n          <div className=\"ui massive green button\" onClick={this.handleDeal}>\n            Deal\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}