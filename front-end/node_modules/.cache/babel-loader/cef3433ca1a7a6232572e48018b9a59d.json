{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/Joseph/Module4/uno/front-end/src/Components/GameScreen.js\";\nimport React, { Component } from \"react\";\nimport cards from \"../cards\";\nimport GamePlay from \"./GamePlay\";\nimport { io } from \"../Socket\";\nexport default class GameScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allCards: [],\n      game: null,\n      players: [],\n      creator: {},\n      player: {\n        user: {},\n        cards: []\n      },\n      deal: false,\n      drawCards: [],\n      turn: null\n    };\n\n    this.deal = () => {\n      if (this.state.player.user.id == this.state.turn.id) {\n        let x = 0;\n        let drawCards = this.state.drawCards;\n\n        while (x < 7) {\n          let randomNumber = Math.floor(Math.random() * drawCards.length);\n          let drawnCard = drawCards[randomNumber];\n          this.state.player.cards.push(drawnCard);\n          drawCards = drawCards.filter(card => card != drawnCard);\n          x = x + 1;\n        }\n\n        this.setState({\n          drawCards\n        });\n        io.emit('cards.dealt', drawCards);\n        io.emit('next.deal', this.state.turn);\n      }\n    };\n\n    this.getCreator = id => {\n      io.emit(\"creator.get\", id);\n      io.on(\"creator.send\", creator => {\n        this.setState({\n          players: [...this.props.players, creator],\n          creator: creator,\n          turn: this.state.players[0]\n        });\n      });\n    };\n\n    this.handleDeal = () => {\n      io.emit(\"deal\");\n    };\n\n    this.handlePlay = card => {\n      console.log(card);\n\n      if (this.state.player.user.id === this.state.turn.id) {\n        console.log(card);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      allCards: cards,\n      game: this.props.game,\n      players: this.props.players,\n      player: {\n        user: this.props.user,\n        cards: []\n      },\n      drawCards: cards\n    });\n    this.getCreator(this.props.game.creator_id);\n    io.on('drawCards.new', cards => this.setState({\n      drawCards: cards\n    }));\n    io.on(\"dealt\", () => {\n      this.setState({\n        deal: true\n      });\n      this.deal();\n    });\n    io.on('next.dealt', ({\n      id\n    }) => {\n      let player = this.state.players.find(player => player.id === id);\n\n      if (this.state.players.indexOf(player) + 2 <= this.state.players.length) {\n        return this.setState({\n          turn: this.state.players[this.state.players.indexOf(player) + 1]\n        }, () => this.deal());\n      }\n\n      return this.setState({\n        turn: this.state.players[1]\n      });\n    });\n  }\n\n  render() {\n    if (this.state.deal) {\n      return React.createElement(GamePlay, {\n        drawCards: this.state.drawCards,\n        cards: this.state.player.cards,\n        turn: this.state.turn.username,\n        handlePlay: this.handlePlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"ui raised very padded text container segment form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.game ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.game.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.player.user.username), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Creator: \", this.state.creator.username)) : null, this.state.players.map(player => {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, player.username);\n    }), this.props.user.id == this.state.creator.id ? React.createElement(\"div\", {\n      className: \"ui massive green button\",\n      onClick: this.handleDeal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Deal\") : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/Joseph/Module4/uno/front-end/src/Components/GameScreen.js"],"names":["React","Component","cards","GamePlay","io","GameScreen","state","allCards","game","players","creator","player","user","deal","drawCards","turn","id","x","randomNumber","Math","floor","random","length","drawnCard","push","filter","card","setState","emit","getCreator","on","props","handleDeal","handlePlay","console","log","componentDidMount","creator_id","find","indexOf","render","username","name","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport cards from \"../cards\";\nimport GamePlay from \"./GamePlay\";\nimport { io } from \"../Socket\";\n\nexport default class GameScreen extends Component {\n  state = {\n    allCards: [],\n    game: null,\n    players: [],\n    creator: {},\n    player: {\n      user: {},\n      cards: []\n    },\n    deal: false,\n    drawCards: [],\n    turn: null\n  };\n\n  componentDidMount() {\n    this.setState({\n      allCards: cards,\n      game: this.props.game,\n      players: this.props.players,\n      player: {\n        user: this.props.user,\n        cards: []\n      },\n      drawCards: cards,\n    });\n    this.getCreator(this.props.game.creator_id);\n    io.on('drawCards.new', (cards) => this.setState({drawCards: cards}))\n    io.on(\"dealt\", () => {\n      this.setState({ deal: true });\n      this.deal();\n    });\n    io.on('next.dealt', ({ id }) => {\n      let player = this.state.players.find(player => player.id === id)\n      if( this.state.players.indexOf(player) + 2 <= this.state.players.length){\n        return this.setState({\n          turn: this.state.players[this.state.players.indexOf(player) + 1]\n        }, () => this.deal())\n      }\n      return this.setState({turn: this.state.players[1]})\n    })\n  }\n\n  deal = () => {\n    if(this.state.player.user.id == this.state.turn.id){\n      let x = 0;\n      let drawCards = this.state.drawCards\n      while (x < 7) {\n        let randomNumber = Math.floor(Math.random() * drawCards.length);\n        let drawnCard = drawCards[randomNumber];\n\n        this.state.player.cards.push(drawnCard);\n        drawCards = drawCards.filter(card => card != drawnCard)\n        x = x + 1;\n      }\n      this.setState({ drawCards })\n      io.emit('cards.dealt', drawCards)\n      io.emit('next.deal', this.state.turn);\n    }\n  };\n\n  getCreator = id => {\n    io.emit(\"creator.get\", id);\n    io.on(\"creator.send\", creator => {\n      this.setState({\n        players: [...this.props.players, creator],\n        creator: creator,\n        turn: this.state.players[0]\n      });\n    });\n  };\n\n  handleDeal = () => {\n    io.emit(\"deal\");\n  };\n\n  handlePlay = (card) => {\n    console.log(card)\n    if(this.state.player.user.id === this.state.turn.id){\n      console.log(card)\n    }\n  }\n\n  render() {\n    if (this.state.deal) {\n      return (\n        <GamePlay\n          drawCards={this.state.drawCards}\n          cards={this.state.player.cards}\n          turn={this.state.turn.username}\n          handlePlay={this.handlePlay}\n        />\n      );\n    }\n    return (\n      <div className=\"ui raised very padded text container segment form\">\n        {this.state.game ? (\n          <div>\n            <h1>{this.state.game.name}</h1>\n            <h2>{this.state.player.user.username}</h2>\n            <h3>Creator: {this.state.creator.username}</h3>\n          </div>\n        ) : null}\n        {this.state.players.map(player => {\n          return <h3>{player.username}</h3>;\n        })}\n        {this.props.user.id == this.state.creator.id ? (\n          <div className=\"ui massive green button\" onClick={this.handleDeal}>\n            Deal\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}